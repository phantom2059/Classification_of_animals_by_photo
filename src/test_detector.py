"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ YOLOv11x
"""

import os
import sys
from pathlib import Path
from animal_detector import AnimalDetector

def test_all_animals():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –Ω–∞ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
    """
    # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö YOLOv11x...")
    detector = AnimalDetector()
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results_dir = Path("results")
    results_dir.mkdir(exist_ok=True)
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {results_dir.absolute()}")
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    test_dir = Path("data/test")
    
    if not test_dir.exists():
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {test_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: python src/download_animal_test_data.py")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_extensions = ['.jpg', '.jpeg', '.png', '.bmp']
    image_files = []
    
    for ext in image_extensions:
        image_files.extend(test_dir.glob(f"*{ext}"))
        image_files.extend(test_dir.glob(f"*{ext.upper()}"))
    
    if not image_files:
        print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {test_dir}")
        return
    
    print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(image_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 60)
    
    total_animals_found = 0
    
    for i, image_path in enumerate(image_files, 1):
        print(f"\n[{i}/{len(image_files)}] –û–±—Ä–∞–±–æ—Ç–∫–∞: {image_path.name}")
        print("-" * 40)
        
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é
            result_image, detected_animals = detector.detect(str(image_path), conf_threshold=0.25)
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if detected_animals:
                print(f"üêæ –ù–∞–π–¥–µ–Ω–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö: {len(detected_animals)}")
                for animal in detected_animals:
                    print(f"  - {animal['class_ru']} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {animal['confidence']:.2f}) [YOLOv11x]")
                total_animals_found += len(detected_animals)
            else:
                print("‚ùå –ñ–∏–≤–æ—Ç–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            base_name = image_path.stem
            output_path = results_dir / f"{base_name}_yolo11x.jpg"
            detector.save_result(result_image, str(output_path))
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {image_path.name}: {e}")
    
    print("\n" + "=" * 60)
    print(f"üéØ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø YOLOv11x:")
    print(f"üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_files)}")
    print(f"üêæ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö: {total_animals_found}")
    print(f"üìä –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {total_animals_found/len(image_files):.1f}")
    print(f"üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: {results_dir.absolute()}")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    """
    print("üêæ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ï–¢–ï–ö–¢–û–†–ê –ñ–ò–í–û–¢–ù–´–• YOLOv11x üêæ")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_all_animals()

if __name__ == "__main__":
    main() 